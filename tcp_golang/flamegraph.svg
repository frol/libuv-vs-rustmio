<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="198" onload="init(evt)" viewBox="0 0 1200 198" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA[var details, searchbtn, matchedtxt, svg;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}
// mouse-over for info
function s(node) {		// show
    info = g_to_text(node);
    details.nodeValue = nametype + " " + info;
}
function c() {			// clear
    details.nodeValue = ' ';
}
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
})
// functions
function find_child(parent, name, attr) {
    var children = parent.childNodes;
    for (var i=0; i<children.length;i++) {
        if (children[i].tagName == name)
            return (attr != undefined) ? children[i].attributes[attr].value : children[i];
    }
    return;
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_"+attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_"+attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_"+attr].value;
    e.removeAttribute("_orig_"+attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes["width"].value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;
    // Smaller than this size won't fit anything
    if (w < 2*fontsize*fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x=txt.length-2; x>0; x--) {
        if (t.getSubStringLength(0, x+2) <= w) {
            t.textContent = txt.substring(0,x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i=0, c=e.childNodes; i<c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes["x"] != undefined) {
            orig_save(e, "x");
            e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
        }
        if (e.attributes["width"] != undefined) {
            orig_save(e, "width");
            e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i=0, c=e.childNodes; i<c.length; i++) {
        zoom_child(c[i], x-xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes["x"] != undefined) {
            orig_save(e, "x");
            e.attributes["x"].value = xpad;
        }
        if (e.attributes["width"] != undefined) {
            orig_save(e, "width");
            e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i=0, c=e.childNodes; i<c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr["width"].value);
    var xmin = parseFloat(attr["x"].value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr["y"].value);
    var ratio = (svg.width.baseVal.value - 2*xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    var unzoombtn = document.getElementById("unzoom");
    unzoombtn.style["opacity"] = "1.0";
    var el = document.getElementsByTagName("g");
    for(var i=0;i<el.length;i++){
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a["x"].value);
        var ew = parseFloat(a["width"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a["y"].value) > ymin;
        } else {
            var upstack = parseFloat(a["y"].value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.style["opacity"] = "0.5";
                zoom_parent(e);
                e.onclick = function(e){unzoom(); zoom(this);};
                update_text(e);
            }
            // not in current path
            else
                e.style["display"] = "none";
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.style["display"] = "none";
            }
            else {
                zoom_child(e, xmin, ratio);
                e.onclick = function(e){zoom(this);};
                update_text(e);
            }
        }
    }
}
function unzoom() {
    var unzoombtn = document.getElementById("unzoom");
    unzoombtn.style["opacity"] = "0.0";
    var el = document.getElementsByTagName("g");
    for(i=0;i<el.length;i++) {
        el[i].style["display"] = "block";
        el[i].style["opacity"] = "1";
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.getElementsByTagName("rect");
    for (var i=0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.style["opacity"] = "0.1";
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.style["opacity"] = "0.0";
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementsByTagName("g");
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        if (e.attributes["class"].value != "func_g")
            continue;
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (rect == null) {
            // the rect might be wrapped in an anchor
            // if nameattr href is being used
            if (rect = find_child(e, "a")) {
                rect = find_child(r, "rect");
            }
        }
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes["width"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes["x"].value);
            orig_save(rect, "fill");
            rect.attributes["fill"].value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.style["opacity"] = "1.0";
    searchbtn.firstChild.nodeValue = "Reset Search"
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.style["opacity"] = "1.0";
    pct = 100 * count / maxwidth;
    if (pct == 100)
        pct = "100"
    else
        pct = pct.toFixed(1)
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function searchover(e) {
    searchbtn.style["opacity"] = "1.0";
}
function searchout(e) {
    if (searching) {
        searchbtn.style["opacity"] = "1.0";
    } else {
        searchbtn.style["opacity"] = "0.1";
    }
}
]]></script><rect x="0" y="0" width="1200" height="198" fill="url(#background)"/><text text-anchor="middle" x="600.00" y="24.00" font-size="17" font-family="Verdana" fill="rgb(0, 0, 0)">Flame Graph</text><text id="details" text-anchor="left" x="10.00" y="181.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"> </text><text id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" text-anchor="left" x="10.00" y="24.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">Reset Zoom</text><text id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" text-anchor="left" x="1090.00" y="24.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">Search</text><text id="matched" text-anchor="left" x="1090.00" y="181.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"> </text><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>[unknown] (1 samples, 0.10%)</title><rect x="10" y="117" width="1" height="15" fill="rgb(209,36,29)"/><text text-anchor="left" x="13.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___clone (1 samples, 0.10%)</title><rect x="10" y="101" width="1" height="15" fill="rgb(246,94,18)"/><text text-anchor="left" x="13.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___clone (25 samples, 2.54%)</title><rect x="11" y="117" width="30" height="15" fill="rgb(230,176,54)"/><text text-anchor="left" x="14.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_start (5 samples, 0.51%)</title><rect x="41" y="117" width="6" height="15" fill="rgb(230,226,10)"/><text text-anchor="left" x="44.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_dl_start (1 samples, 0.10%)</title><rect x="45" y="101" width="2" height="15" fill="rgb(252,67,46)"/><text text-anchor="left" x="48.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>internal/poll.(*FD).Read (11 samples, 1.12%)</title><rect x="47" y="117" width="13" height="15" fill="rgb(206,151,37)"/><text text-anchor="left" x="50.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>internal/poll.(*fdMutex).rwlock (3 samples, 0.30%)</title><rect x="60" y="117" width="3" height="15" fill="rgb(210,194,35)"/><text text-anchor="left" x="63.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>internal/poll.(*fdMutex).rwunlock (2 samples, 0.20%)</title><rect x="63" y="117" width="3" height="15" fill="rgb(246,164,20)"/><text text-anchor="left" x="66.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>internal/poll.(*pollDesc).prepare (1 samples, 0.10%)</title><rect x="66" y="117" width="1" height="15" fill="rgb(244,104,28)"/><text text-anchor="left" x="69.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>internal/poll.runtime_pollReset (2 samples, 0.20%)</title><rect x="67" y="117" width="2" height="15" fill="rgb(242,66,16)"/><text text-anchor="left" x="70.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>main.handleRequest (5 samples, 0.51%)</title><rect x="69" y="117" width="6" height="15" fill="rgb(229,174,15)"/><text text-anchor="left" x="72.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>net.(*conn).Read (1 samples, 0.10%)</title><rect x="75" y="117" width="2" height="15" fill="rgb(241,153,38)"/><text text-anchor="left" x="78.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>net.(*conn).Write (2 samples, 0.20%)</title><rect x="77" y="117" width="2" height="15" fill="rgb(215,47,22)"/><text text-anchor="left" x="80.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.(*mheap).coalesce (1 samples, 0.10%)</title><rect x="79" y="117" width="1" height="15" fill="rgb(232,214,38)"/><text text-anchor="left" x="82.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.casgstatus (4 samples, 0.41%)</title><rect x="80" y="117" width="5" height="15" fill="rgb(208,100,36)"/><text text-anchor="left" x="83.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.deferreturn (8 samples, 0.81%)</title><rect x="85" y="117" width="10" height="15" fill="rgb(245,116,13)"/><text text-anchor="left" x="88.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.epollwait (111 samples, 11.27%)</title><rect x="95" y="117" width="133" height="15" fill="rgb(238,73,42)"/><text text-anchor="left" x="98.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">runtime.epollwait</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.execute (3 samples, 0.30%)</title><rect x="228" y="117" width="3" height="15" fill="rgb(242,119,40)"/><text text-anchor="left" x="231.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.exitsyscall (5 samples, 0.51%)</title><rect x="231" y="117" width="6" height="15" fill="rgb(243,156,11)"/><text text-anchor="left" x="234.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.exitsyscallfast (3 samples, 0.30%)</title><rect x="237" y="117" width="4" height="15" fill="rgb(207,134,38)"/><text text-anchor="left" x="240.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.findrunnable (5 samples, 0.51%)</title><rect x="241" y="117" width="6" height="15" fill="rgb(242,190,21)"/><text text-anchor="left" x="244.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.freedefer (5 samples, 0.51%)</title><rect x="247" y="117" width="6" height="15" fill="rgb(230,40,20)"/><text text-anchor="left" x="250.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.futex (185 samples, 18.78%)</title><rect x="253" y="117" width="221" height="15" fill="rgb(211,156,38)"/><text text-anchor="left" x="256.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">runtime.futex</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.gopark (2 samples, 0.20%)</title><rect x="474" y="117" width="3" height="15" fill="rgb(243,5,3)"/><text text-anchor="left" x="477.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.jmpdefer (1 samples, 0.10%)</title><rect x="477" y="117" width="1" height="15" fill="rgb(238,223,40)"/><text text-anchor="left" x="480.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.lock (2 samples, 0.20%)</title><rect x="478" y="117" width="2" height="15" fill="rgb(218,190,40)"/><text text-anchor="left" x="481.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.makeslice (1 samples, 0.10%)</title><rect x="480" y="117" width="2" height="15" fill="rgb(245,181,28)"/><text text-anchor="left" x="483.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.mallocgc (13 samples, 1.32%)</title><rect x="482" y="117" width="15" height="15" fill="rgb(230,11,38)"/><text text-anchor="left" x="485.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.memmove (1 samples, 0.10%)</title><rect x="497" y="117" width="1" height="15" fill="rgb(230,178,17)"/><text text-anchor="left" x="500.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.nanotime (1 samples, 0.10%)</title><rect x="498" y="117" width="1" height="15" fill="rgb(218,27,46)"/><text text-anchor="left" x="501.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.netpoll (7 samples, 0.71%)</title><rect x="499" y="117" width="9" height="15" fill="rgb(218,88,31)"/><text text-anchor="left" x="502.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.netpollblock (6 samples, 0.61%)</title><rect x="508" y="117" width="7" height="15" fill="rgb(251,148,1)"/><text text-anchor="left" x="511.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.netpollblockcommit (3 samples, 0.30%)</title><rect x="515" y="117" width="4" height="15" fill="rgb(222,31,19)"/><text text-anchor="left" x="518.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.netpollready (1 samples, 0.10%)</title><rect x="519" y="117" width="1" height="15" fill="rgb(212,127,47)"/><text text-anchor="left" x="522.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.netpollunblock (4 samples, 0.41%)</title><rect x="520" y="117" width="5" height="15" fill="rgb(221,188,26)"/><text text-anchor="left" x="523.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.newdefer (3 samples, 0.30%)</title><rect x="525" y="117" width="3" height="15" fill="rgb(239,142,49)"/><text text-anchor="left" x="528.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.notesleep (2 samples, 0.20%)</title><rect x="528" y="117" width="3" height="15" fill="rgb(205,108,9)"/><text text-anchor="left" x="531.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.reentersyscall (2 samples, 0.20%)</title><rect x="531" y="117" width="2" height="15" fill="rgb(209,36,33)"/><text text-anchor="left" x="534.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.releasep (1 samples, 0.10%)</title><rect x="533" y="117" width="1" height="15" fill="rgb(219,205,28)"/><text text-anchor="left" x="536.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.retake (1 samples, 0.10%)</title><rect x="534" y="117" width="1" height="15" fill="rgb(243,118,39)"/><text text-anchor="left" x="537.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.runqgrab (1 samples, 0.10%)</title><rect x="535" y="117" width="2" height="15" fill="rgb(217,137,40)"/><text text-anchor="left" x="538.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.runqsteal (1 samples, 0.10%)</title><rect x="537" y="117" width="1" height="15" fill="rgb(206,15,12)"/><text text-anchor="left" x="540.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.save (2 samples, 0.20%)</title><rect x="538" y="117" width="2" height="15" fill="rgb(237,205,27)"/><text text-anchor="left" x="541.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.schedule (5 samples, 0.51%)</title><rect x="540" y="117" width="6" height="15" fill="rgb(225,76,2)"/><text text-anchor="left" x="543.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.startm (1 samples, 0.10%)</title><rect x="546" y="117" width="1" height="15" fill="rgb(206,97,42)"/><text text-anchor="left" x="549.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.stringtoslicebyte (1 samples, 0.10%)</title><rect x="547" y="117" width="2" height="15" fill="rgb(253,5,22)"/><text text-anchor="left" x="550.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.sysmon (1 samples, 0.10%)</title><rect x="549" y="117" width="1" height="15" fill="rgb(233,71,13)"/><text text-anchor="left" x="552.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.usleep (55 samples, 5.58%)</title><rect x="550" y="117" width="66" height="15" fill="rgb(219,44,24)"/><text text-anchor="left" x="553.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">runtime..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime.wirep (3 samples, 0.30%)</title><rect x="616" y="117" width="3" height="15" fill="rgb(254,123,49)"/><text text-anchor="left" x="619.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>runtime/cgo (4 samples, 0.41%)</title><rect x="619" y="117" width="5" height="15" fill="rgb(221,205,11)"/><text text-anchor="left" x="622.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___libc_free (4 samples, 0.41%)</title><rect x="619" y="101" width="5" height="15" fill="rgb(217,102,8)"/><text text-anchor="left" x="622.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>tcache_init.part.6 (4 samples, 0.41%)</title><rect x="619" y="85" width="5" height="15" fill="rgb(214,86,1)"/><text text-anchor="left" x="622.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>arena_get2.part.4 (4 samples, 0.41%)</title><rect x="619" y="69" width="5" height="15" fill="rgb(208,186,13)"/><text text-anchor="left" x="622.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>new_heap (4 samples, 0.41%)</title><rect x="619" y="53" width="5" height="15" fill="rgb(250,37,33)"/><text text-anchor="left" x="622.00" y="63.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI_munmap (1 samples, 0.10%)</title><rect x="623" y="37" width="1" height="15" fill="rgb(234,119,26)"/><text text-anchor="left" x="626.00" y="47.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>strings.Repeat (5 samples, 0.51%)</title><rect x="624" y="117" width="6" height="15" fill="rgb(240,156,25)"/><text text-anchor="left" x="627.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>syscall.Syscall (464 samples, 47.11%)</title><rect x="630" y="117" width="556" height="15" fill="rgb(207,105,47)"/><text text-anchor="left" x="633.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">syscall.Syscall</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>[unknown] (1 samples, 0.10%)</title><rect x="1185" y="101" width="1" height="15" fill="rgb(226,226,44)"/><text text-anchor="left" x="1188.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>syscall.read (2 samples, 0.20%)</title><rect x="1186" y="117" width="2" height="15" fill="rgb(212,222,34)"/><text text-anchor="left" x="1189.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>all (985 samples, 100%)</title><rect x="10" y="149" width="1180" height="15" fill="rgb(247,164,37)"/><text text-anchor="left" x="13.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>tcp_golang (985 samples, 100.00%)</title><rect x="10" y="133" width="1180" height="15" fill="rgb(210,54,21)"/><text text-anchor="left" x="13.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">tcp_golang</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>syscall.write (1 samples, 0.10%)</title><rect x="1188" y="117" width="2" height="15" fill="rgb(216,167,27)"/><text text-anchor="left" x="1191.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g></svg>